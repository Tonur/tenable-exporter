/*
 * Vulnerability Management
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct VulnerabilitiesImportRequestAssetsInner {
    /// A valid network_interface object must contain at least one of the following parameters: `ipv4`, `netbios_name`, `fqdn`.
    #[serde(rename = "network_interfaces", skip_serializing_if = "Option::is_none")]
    pub network_interfaces: Option<Vec<crate::models::VulnerabilitiesImportRequestAssetsInnerNetworkInterfacesInner>>,
    /// The asset's hostname.
    #[serde(rename = "hostname", skip_serializing_if = "Option::is_none")]
    pub hostname: Option<String>,
    /// The unique record identifier of the asset in ServiceNow. For more information, see the ServiceNow documentation.
    #[serde(rename = "servicenow_sysid", skip_serializing_if = "Option::is_none")]
    pub servicenow_sysid: Option<String>,
    /// The SSH key fingerprint that the scan has associated with the asset.
    #[serde(rename = "ssh_fingerprint", skip_serializing_if = "Option::is_none")]
    pub ssh_fingerprint: Option<String>,
    /// The BIOS UUID of the asset.
    #[serde(rename = "bios_uuid", skip_serializing_if = "Option::is_none")]
    pub bios_uuid: Option<String>,
    /// The NetBIOS name that the scan has associated with the asset.
    #[serde(rename = "netbios_name", skip_serializing_if = "Option::is_none")]
    pub netbios_name: Option<String>,
    /// The unique ID of the Nessus agent installed on the asset. This parameter is supported only if the `source` parameter for the request is `security_center`.
    #[serde(rename = "tenable_agent_id", skip_serializing_if = "Option::is_none")]
    pub tenable_agent_id: Option<i32>,
    /// A valid vulnerability object must contain at least one of the following parameters: `tenable_plugin_id` or `cve`.
    #[serde(rename = "vulnerabilities", skip_serializing_if = "Option::is_none")]
    pub vulnerabilities: Option<Vec<crate::models::VulnerabilitiesImportRequestAssetsInnerVulnerabilitiesInner>>,
}

impl VulnerabilitiesImportRequestAssetsInner {
    pub fn new() -> VulnerabilitiesImportRequestAssetsInner {
        VulnerabilitiesImportRequestAssetsInner {
            network_interfaces: None,
            hostname: None,
            servicenow_sysid: None,
            ssh_fingerprint: None,
            bios_uuid: None,
            netbios_name: None,
            tenable_agent_id: None,
            vulnerabilities: None,
        }
    }
}


