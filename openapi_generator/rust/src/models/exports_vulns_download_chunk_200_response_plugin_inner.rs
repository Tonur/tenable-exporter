/*
 * Vulnerability Management
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ExportsVulnsDownloadChunk200ResponsePluginInner {
    /// The Bugtraq ID for the plugin.
    #[serde(rename = "bid", skip_serializing_if = "Option::is_none")]
    pub bid: Option<i32>,
    /// The name of the CANVAS exploit pack that includes the vulnerability.
    #[serde(rename = "canvas_package", skip_serializing_if = "Option::is_none")]
    pub canvas_package: Option<String>,
    /// A value specifying whether the plugin checks for default accounts.
    #[serde(rename = "checks_for_default_account", skip_serializing_if = "Option::is_none")]
    pub checks_for_default_account: Option<bool>,
    /// A value specifying whether the plugin checks for malware.
    #[serde(rename = "checks_for_malware", skip_serializing_if = "Option::is_none")]
    pub checks_for_malware: Option<bool>,
    /// The Common Platform Enumeration (CPE) number for the plugin.
    #[serde(rename = "cpe", skip_serializing_if = "Option::is_none")]
    pub cpe: Option<String>,
    /// The Common Vulnerability and Exposure (CVE) ID for the plugin.
    #[serde(rename = "cve", skip_serializing_if = "Option::is_none")]
    pub cve: Option<String>,
    /// The CVSSv3 base score (intrinsic and fundamental characteristics of a vulnerability that are constant over time and user environments).
    #[serde(rename = "cvss3_base_score", skip_serializing_if = "Option::is_none")]
    pub cvss3_base_score: Option<String>,
    /// The CVSSv3 temporal score (characteristics of a vulnerability that change over time but not among user environments).
    #[serde(rename = "cvss3_temporal_score", skip_serializing_if = "Option::is_none")]
    pub cvss3_temporal_score: Option<String>,
    /// CVSSv3 temporal metrics for the vulnerability.
    #[serde(rename = "cvss3_temporal_vector", skip_serializing_if = "Option::is_none")]
    pub cvss3_temporal_vector: Option<Vec<crate::models::ExportsVulnsDownloadChunk200ResponsePluginInnerCvss3TemporalVectorInner>>,
    /// Additional CVSSv3 metrics for the vulnerability.
    #[serde(rename = "cvss3_vector", skip_serializing_if = "Option::is_none")]
    pub cvss3_vector: Option<Vec<crate::models::ExportsVulnsDownloadChunk200ResponsePluginInnerCvss3VectorInner>>,
    /// The CVSSv2 base score (intrinsic and fundamental characteristics of a vulnerability that are constant over time and user environments).
    #[serde(rename = "cvss_base_score", skip_serializing_if = "Option::is_none")]
    pub cvss_base_score: Option<String>,
    /// The CVSSv2 temporal score (characteristics of a vulnerability that change over time but not among user environments).
    #[serde(rename = "cvss_temporal_score", skip_serializing_if = "Option::is_none")]
    pub cvss_temporal_score: Option<String>,
    /// CVSSv2 temporal metrics for the vulnerability.
    #[serde(rename = "cvss_temporal_vector", skip_serializing_if = "Option::is_none")]
    pub cvss_temporal_vector: Option<Vec<crate::models::ExportsVulnsDownloadChunk200ResponsePluginInnerCvssTemporalVectorInner>>,
    /// Additional CVSSv2 metrics for the vulnerability.
    #[serde(rename = "cvss_vector", skip_serializing_if = "Option::is_none")]
    pub cvss_vector: Option<Vec<crate::models::ExportsVulnsDownloadChunk200ResponsePluginInnerCvssVectorInner>>,
    /// The name of the exploit in the D2 Elliot Web Exploitation framework.
    #[serde(rename = "d2_elliot_name", skip_serializing_if = "Option::is_none")]
    pub d2_elliot_name: Option<String>,
    /// Full text description of the vulnerability.
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// A value specifying whether a public exploit exists for the vulnerability.
    #[serde(rename = "exploit_available", skip_serializing_if = "Option::is_none")]
    pub exploit_available: Option<bool>,
    /// A value specifying whether an exploit exists in the Immunity CANVAS framework.
    #[serde(rename = "exploit_framework_canvas", skip_serializing_if = "Option::is_none")]
    pub exploit_framework_canvas: Option<bool>,
    /// A value specifying whether  an exploit exists in the CORE Impact framework.
    #[serde(rename = "exploit_framework_core", skip_serializing_if = "Option::is_none")]
    pub exploit_framework_core: Option<bool>,
    /// A value specifying whether  an exploit exists in the D2 Elliot Web Exploitation framework.
    #[serde(rename = "exploit_framework_d2_elliot", skip_serializing_if = "Option::is_none")]
    pub exploit_framework_d2_elliot: Option<bool>,
    /// A value specifying whether  an exploit exists in the ExploitHub framework.
    #[serde(rename = "exploit_framework_exploithub", skip_serializing_if = "Option::is_none")]
    pub exploit_framework_exploithub: Option<bool>,
    /// A value specifying whether  an exploit exists in the Metasploit framework.
    #[serde(rename = "exploit_framework_metasploit", skip_serializing_if = "Option::is_none")]
    pub exploit_framework_metasploit: Option<bool>,
    /// Description of how easy it is to exploit the issue.
    #[serde(rename = "exploitability_ease", skip_serializing_if = "Option::is_none")]
    pub exploitability_ease: Option<String>,
    /// The vulnerability discovered by this plugin is known to be exploited by malware.
    #[serde(rename = "exploited_by_malware", skip_serializing_if = "Option::is_none")]
    pub exploited_by_malware: Option<bool>,
    /// A value specifying whether Nessus exploited the vulnerability during the process of identification.
    #[serde(rename = "exploited_by_nessus", skip_serializing_if = "Option::is_none")]
    pub exploited_by_nessus: Option<bool>,
    /// The SKU number of the exploit in the ExploitHub framework.
    #[serde(rename = "exploithub_sku", skip_serializing_if = "Option::is_none")]
    pub exploithub_sku: Option<String>,
    /// The family to which plugin belongs.
    #[serde(rename = "family", skip_serializing_if = "Option::is_none")]
    pub family: Option<String>,
    /// The ID of the plugin family.
    #[serde(rename = "family_id", skip_serializing_if = "Option::is_none")]
    pub family_id: Option<i32>,
    /// A value specifying whether the vendor has published a patch for the vulnerability.
    #[serde(rename = "has_patch", skip_serializing_if = "Option::is_none")]
    pub has_patch: Option<bool>,
    /// The ID of the plugin that identified the vulnerability.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    /// A value specifying whether this plugin has received media attention (for example, ShellShock, Meltdown).
    #[serde(rename = "in_the_news", skip_serializing_if = "Option::is_none")]
    pub in_the_news: Option<bool>,
    /// The name of the related exploit in the Metasploit framework.
    #[serde(rename = "metasploit_name", skip_serializing_if = "Option::is_none")]
    pub metasploit_name: Option<String>,
    /// The Microsoft security bulletin that the plugin covers.
    #[serde(rename = "ms_bulletin", skip_serializing_if = "Option::is_none")]
    pub ms_bulletin: Option<String>,
    /// The name of the plugin that identified the vulnerability.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// The date on which the vendor published a patch for the vulnerability.
    #[serde(rename = "patch_publication_date", skip_serializing_if = "Option::is_none")]
    pub patch_publication_date: Option<String>,
    /// The date on which the plugin was last modified.
    #[serde(rename = "modification_date", skip_serializing_if = "Option::is_none")]
    pub modification_date: Option<String>,
    /// The date on which the plugin was published.
    #[serde(rename = "publication_date", skip_serializing_if = "Option::is_none")]
    pub publication_date: Option<String>,
    /// The risk factor associated with the plugin. Possible values are: `Low`, `Medium`, `High`, or `Critical`. See the `risk_factor` attribute in [Tenable Plugin Attributes](doc:tenable-plugin-attributes).
    #[serde(rename = "risk_factor", skip_serializing_if = "Option::is_none")]
    pub risk_factor: Option<String>,
    /// Links to external websites that contain helpful information about the vulnerability.
    #[serde(rename = "see_also", skip_serializing_if = "Option::is_none")]
    pub see_also: Option<String>,
    /// Remediation information for the vulnerability.
    #[serde(rename = "solution", skip_serializing_if = "Option::is_none")]
    pub solution: Option<String>,
    /// Security Technical Implementation Guide (STIG) severity code for the vulnerability.
    #[serde(rename = "stig_severity", skip_serializing_if = "Option::is_none")]
    pub stig_severity: Option<String>,
    /// Brief description of the plugin or vulnerability.
    #[serde(rename = "synopsis", skip_serializing_if = "Option::is_none")]
    pub synopsis: Option<String>,
    /// The general type of plugin check (for example, `local` or `remote`).
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<String>,
    /// Software found by this plugin is unsupported by the software's vendor (for example, Windows 95 or Firefox 3).
    #[serde(rename = "unsupported_by_vendor", skip_serializing_if = "Option::is_none")]
    pub unsupported_by_vendor: Option<bool>,
    /// Ubuntu security notice that the plugin covers.
    #[serde(rename = "usn", skip_serializing_if = "Option::is_none")]
    pub usn: Option<String>,
    /// The version of the plugin used to perform the check.
    #[serde(rename = "version", skip_serializing_if = "Option::is_none")]
    pub version: Option<String>,
    /// The publication date of the plugin.
    #[serde(rename = "vuln_publication_date", skip_serializing_if = "Option::is_none")]
    pub vuln_publication_date: Option<String>,
    /// References to third-party information about the vulnerability, exploit, or update associated with the plugin. Each reference includes a type and an ID. For example, 'FEDORA' and '2003-047'.
    #[serde(rename = "xrefs", skip_serializing_if = "Option::is_none")]
    pub xrefs: Option<String>,
    #[serde(rename = "vpr", skip_serializing_if = "Option::is_none")]
    pub vpr: Option<Box<crate::models::ExportsVulnsDownloadChunk200ResponsePluginInnerVpr>>,
}

impl ExportsVulnsDownloadChunk200ResponsePluginInner {
    pub fn new() -> ExportsVulnsDownloadChunk200ResponsePluginInner {
        ExportsVulnsDownloadChunk200ResponsePluginInner {
            bid: None,
            canvas_package: None,
            checks_for_default_account: None,
            checks_for_malware: None,
            cpe: None,
            cve: None,
            cvss3_base_score: None,
            cvss3_temporal_score: None,
            cvss3_temporal_vector: None,
            cvss3_vector: None,
            cvss_base_score: None,
            cvss_temporal_score: None,
            cvss_temporal_vector: None,
            cvss_vector: None,
            d2_elliot_name: None,
            description: None,
            exploit_available: None,
            exploit_framework_canvas: None,
            exploit_framework_core: None,
            exploit_framework_d2_elliot: None,
            exploit_framework_exploithub: None,
            exploit_framework_metasploit: None,
            exploitability_ease: None,
            exploited_by_malware: None,
            exploited_by_nessus: None,
            exploithub_sku: None,
            family: None,
            family_id: None,
            has_patch: None,
            id: None,
            in_the_news: None,
            metasploit_name: None,
            ms_bulletin: None,
            name: None,
            patch_publication_date: None,
            modification_date: None,
            publication_date: None,
            risk_factor: None,
            see_also: None,
            solution: None,
            stig_severity: None,
            synopsis: None,
            r#type: None,
            unsupported_by_vendor: None,
            usn: None,
            version: None,
            vuln_publication_date: None,
            xrefs: None,
            vpr: None,
        }
    }
}


