/*
 * Vulnerability Management
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct EditorDetails200Response {
    /// Indicates whether the scan or user-defined template (policy) can be used in Tenable.io Web Application Scanning.
    #[serde(rename = "is_was", skip_serializing_if = "Option::is_none")]
    pub is_was: Option<bool>,
    /// The scan or policy permissions that the requesting user has for the specified scan or user-defined template (policy). For more information, see [Permissions](doc:permissions).
    #[serde(rename = "user_permissions", skip_serializing_if = "Option::is_none")]
    pub user_permissions: Option<i32>,
    /// The username of the owner of the scan or user-defined template (policy).
    #[serde(rename = "owner", skip_serializing_if = "Option::is_none")]
    pub owner: Option<String>,
    /// For scans, the standard text, `Custom Scan`. For user-defined templates (policies), the name of the Tenable-provided template used to create the user-defined template. 
    #[serde(rename = "title", skip_serializing_if = "Option::is_none")]
    pub title: Option<String>,
    /// Indicates whether the scan or user-defined template (policy) can be used for agent scans.
    #[serde(rename = "is_agent", skip_serializing_if = "Option::is_none")]
    pub is_agent: Option<bool>,
    /// The UUID of the scan or user-defined template (policy).
    #[serde(rename = "uuid", skip_serializing_if = "Option::is_none")]
    pub uuid: Option<String>,
    #[serde(rename = "filter_attributes", skip_serializing_if = "Option::is_none")]
    pub filter_attributes: Option<Vec<crate::models::EditorDetails200ResponseFilterAttributesInner>>,
    #[serde(rename = "settings", skip_serializing_if = "Option::is_none")]
    pub settings: Option<Box<crate::models::EditorDetails200ResponseSettings>>,
    /// Credentials that grant the scanner access to the target system without requiring an agent. Credentialed scans can perform a wider variety of checks than non-credentialed scans, which can result in more accurate scan results. This facilitates scanning of a very large network to determine local exposures or compliance violations. You can configure credentials for Cloud Services, Database, Host, Miscellaneous, Mobile Device Management, and Plaintext Authentication.
    #[serde(rename = "credentials", skip_serializing_if = "Option::is_none")]
    pub credentials: Option<serde_json::Value>,
    /// Plugins options enables you to select security checks by Plugin Family or individual plugins checks.
    #[serde(rename = "compliance", skip_serializing_if = "Option::is_none")]
    pub compliance: Option<serde_json::Value>,
    /// The settings for compliance audit checks.
    #[serde(rename = "plugins", skip_serializing_if = "Option::is_none")]
    pub plugins: Option<serde_json::Value>,
    /// For scans, the standard text, `custom`. For user-defined templates (policies), the system name for the Tenable-provided template used to create the scan or user-defined template.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
}

impl EditorDetails200Response {
    pub fn new() -> EditorDetails200Response {
        EditorDetails200Response {
            is_was: None,
            user_permissions: None,
            owner: None,
            title: None,
            is_agent: None,
            uuid: None,
            filter_attributes: None,
            settings: None,
            credentials: None,
            compliance: None,
            plugins: None,
            name: None,
        }
    }
}


