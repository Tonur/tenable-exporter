/*
 * Vulnerability Management
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct IoScansCredentialsConvertRequestPermissionsInner {
    /// The UUID of the user or user group granted permissions for managed credentials.   This parameter is required when assigning CAN USE [32] or CAN EDIT [64] permissions for managed credentials.
    #[serde(rename = "grantee_uuid", skip_serializing_if = "Option::is_none")]
    pub grantee_uuid: Option<String>,
    /// A value specifying whether the grantee is a user (`user`) or a user group (`group`).    This parameter is required when assigning CAN USE [32] or CAN EDIT [64] permissions for  managed credentials.
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<Type>,
    /// A value specifying the permissions granted to the user or user group for the managed credentials. Possible values are:  - 32—The user can view credentials information and use the credentials in scans. Corresponds to the **Can Use** permission in the user interface.  - 64—The user can view and edit credential settings, delete the credentials, and use the credentials in scans. Corresponds to the **Can Edit** permission in the user interface.    This parameter is required when assigning CAN USE [32] or CAN EDIT [64] permissions for managed credentials.
    #[serde(rename = "permissions", skip_serializing_if = "Option::is_none")]
    pub permissions: Option<i32>,
    /// The name of the user or user group that you want to grant permissions for the managed credentials.    This parameter is optional when assigning CAN USE [32] or CAN EDIT [64] permissions for the managed credentials.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
}

impl IoScansCredentialsConvertRequestPermissionsInner {
    pub fn new() -> IoScansCredentialsConvertRequestPermissionsInner {
        IoScansCredentialsConvertRequestPermissionsInner {
            grantee_uuid: None,
            r#type: None,
            permissions: None,
            name: None,
        }
    }
}

/// A value specifying whether the grantee is a user (`user`) or a user group (`group`).    This parameter is required when assigning CAN USE [32] or CAN EDIT [64] permissions for  managed credentials.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "user")]
    User,
    #[serde(rename = "group")]
    Group,
}

impl Default for Type {
    fn default() -> Type {
        Self::User
    }
}

