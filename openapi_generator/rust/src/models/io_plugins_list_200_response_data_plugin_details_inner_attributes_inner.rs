/*
 * Vulnerability Management
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct IoPluginsList200ResponseDataPluginDetailsInnerAttributesInner {
    /// The date when Tenable last updated the plugin.
    #[serde(rename = "plugin_modification_date", skip_serializing_if = "Option::is_none")]
    pub plugin_modification_date: Option<String>,
    /// The version of the plugin.
    #[serde(rename = "plugin_version", skip_serializing_if = "Option::is_none")]
    pub plugin_version: Option<String>,
    /// Indicates whether the vulnerability discovered by this plugin is known to be exploited by malware.
    #[serde(rename = "exploited_by_malware", skip_serializing_if = "Option::is_none")]
    pub exploited_by_malware: Option<bool>,
    /// The extended description of the plugin.
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// Indicates whether the software found by this plugin is unsupported by the software's vendor (for example, Windows 95 or Firefox 3).
    #[serde(rename = "unsupported_by_vendor", skip_serializing_if = "Option::is_none")]
    pub unsupported_by_vendor: Option<bool>,
    /// The raw CVSSv2 temporal metrics for the vulnerability.
    #[serde(rename = "cvss_temporal_score", skip_serializing_if = "Option::is_none")]
    pub cvss_temporal_score: Option<f32>,
    /// The date when the vendor published a patch for the vulnerability.
    #[serde(rename = "patch_publication_date", skip_serializing_if = "Option::is_none")]
    pub patch_publication_date: Option<String>,
    /// Links to external websites that contain helpful information about the vulnerability.
    #[serde(rename = "see_also", skip_serializing_if = "Option::is_none")]
    pub see_also: Option<Vec<String>>,
    /// Indicates whether the plugin checks for default accounts requiring the use of credentials other than the credentials provided in the scan policy. For more information, see [What are the plugins that test for default accounts?](https://community.tenable.com/s/article/What-are-the-plugins-that-test-for-default-accounts) in the Tenable Community Portal.
    #[serde(rename = "default_account", skip_serializing_if = "Option::is_none")]
    pub default_account: Option<String>,
    /// Indicates whether a known public exploit exists for the vulnerability.
    #[serde(rename = "exploit_available", skip_serializing_if = "Option::is_none")]
    pub exploit_available: Option<bool>,
    /// A list of Common Vulnerabilities and Exposures (CVE) IDs for the vulnerabilities associated with the plugin.
    #[serde(rename = "cve", skip_serializing_if = "Option::is_none")]
    pub cve: Option<Vec<String>>,
    /// Indicates whether an exploit exists in the Immunity CANVAS framework.
    #[serde(rename = "exploit_framework_canvas", skip_serializing_if = "Option::is_none")]
    pub exploit_framework_canvas: Option<bool>,
    /// The CVSSv2 base score (intrinsic and fundamental characteristics of a vulnerability that are constant over time and user environments).
    #[serde(rename = "cvss_base_score", skip_serializing_if = "Option::is_none")]
    pub cvss_base_score: Option<String>,
    /// Remediation information for the vulnerability.
    #[serde(rename = "solution", skip_serializing_if = "Option::is_none")]
    pub solution: Option<String>,
    #[serde(rename = "cvss_vector", skip_serializing_if = "Option::is_none")]
    pub cvss_vector: Option<Box<crate::models::IoPluginsList200ResponseDataPluginDetailsInnerAttributesInnerCvssVector>>,
    /// Indicates whether an exploit exists in the ExploitHub framework.
    #[serde(rename = "exploit_framework_exploithub", skip_serializing_if = "Option::is_none")]
    pub exploit_framework_exploithub: Option<bool>,
    /// A list of plugin target systems identified by Common Platform Enumeration (CPE).
    #[serde(rename = "cpe", skip_serializing_if = "Option::is_none")]
    pub cpe: Option<Vec<String>>,
    /// The date when Tenable originally published the plugin.
    #[serde(rename = "plugin_publication_date", skip_serializing_if = "Option::is_none")]
    pub plugin_publication_date: Option<String>,
    /// Indicates whether an exploit exists in the CORE Impact framework.
    #[serde(rename = "exploit_framework_core", skip_serializing_if = "Option::is_none")]
    pub exploit_framework_core: Option<bool>,
    /// Indicates whether this plugin has received media attention (for example, ShellShock, Meltdown).
    #[serde(rename = "in_the_news", skip_serializing_if = "Option::is_none")]
    pub in_the_news: Option<bool>,
    /// Indicates whether the vendor has published a patch for the vulnerability.
    #[serde(rename = "has_patch", skip_serializing_if = "Option::is_none")]
    pub has_patch: Option<bool>,
    /// References to third-party information about the vulnerability, exploit, or update associated with the plugin. Each reference includes a type, for example, 'FEDORA', and an ID, for example, '2003-047'.
    #[serde(rename = "xref", skip_serializing_if = "Option::is_none")]
    pub xref: Option<Vec<String>>,
    /// Indicates whether the plugin targets potentially malicious files or processes.
    #[serde(rename = "malware", skip_serializing_if = "Option::is_none")]
    pub malware: Option<bool>,
    /// Indicates an exploit exists in the D2 Elliot Web Exploitation framework.
    #[serde(rename = "exploit_framework_d2_elliot", skip_serializing_if = "Option::is_none")]
    pub exploit_framework_d2_elliot: Option<bool>,
    /// References to third-party information about the vulnerability, exploit, or update associated with the plugin. Each reference includes a type and an ID. For example, 'FEDORA' and '2003-047'.
    #[serde(rename = "xrefs", skip_serializing_if = "Option::is_none")]
    pub xrefs: Option<Vec<String>>,
    /// The risk factor associated with the plugin. Possible values are: Low, Medium, High, or Critical.
    #[serde(rename = "risk_factor", skip_serializing_if = "Option::is_none")]
    pub risk_factor: Option<String>,
    /// A brief summary of the vulnerability or vulnerabilities associated with the plugin.
    #[serde(rename = "synopsis", skip_serializing_if = "Option::is_none")]
    pub synopsis: Option<String>,
    /// The CVSSv3 temporal metrics for the vulnerability.
    #[serde(rename = "cvss3_temporal_score", skip_serializing_if = "Option::is_none")]
    pub cvss3_temporal_score: Option<f32>,
    /// Indicates whether Nessus exploited the vulnerability during the process of identification.
    #[serde(rename = "exploited_by_nessus", skip_serializing_if = "Option::is_none")]
    pub exploited_by_nessus: Option<bool>,
    /// The CVSSv3 base score (intrinsic and fundamental characteristics of a vulnerability that are constant over time and user environments).
    #[serde(rename = "cvss3_base_score", skip_serializing_if = "Option::is_none")]
    pub cvss3_base_score: Option<String>,
    /// Indicates whether an exploit exists in the Metasploit framework.
    #[serde(rename = "exploit_framework_metasploit", skip_serializing_if = "Option::is_none")]
    pub exploit_framework_metasploit: Option<bool>,
    /// Plugin type, for example, local, remote, or combined. For more information about plugin type, see [Nessus Plugin Types and Categories](https://community.tenable.com/s/article/Nessus-Plugin-Types-and-Categories) in the Tenable Community Portal.
    #[serde(rename = "plugin_type", skip_serializing_if = "Option::is_none")]
    pub plugin_type: Option<String>,
    #[serde(rename = "vpr", skip_serializing_if = "Option::is_none")]
    pub vpr: Option<Box<crate::models::IoPluginsList200ResponseDataPluginDetailsInnerAttributesInnerVpr>>,
}

impl IoPluginsList200ResponseDataPluginDetailsInnerAttributesInner {
    pub fn new() -> IoPluginsList200ResponseDataPluginDetailsInnerAttributesInner {
        IoPluginsList200ResponseDataPluginDetailsInnerAttributesInner {
            plugin_modification_date: None,
            plugin_version: None,
            exploited_by_malware: None,
            description: None,
            unsupported_by_vendor: None,
            cvss_temporal_score: None,
            patch_publication_date: None,
            see_also: None,
            default_account: None,
            exploit_available: None,
            cve: None,
            exploit_framework_canvas: None,
            cvss_base_score: None,
            solution: None,
            cvss_vector: None,
            exploit_framework_exploithub: None,
            cpe: None,
            plugin_publication_date: None,
            exploit_framework_core: None,
            in_the_news: None,
            has_patch: None,
            xref: None,
            malware: None,
            exploit_framework_d2_elliot: None,
            xrefs: None,
            risk_factor: None,
            synopsis: None,
            cvss3_temporal_score: None,
            exploited_by_nessus: None,
            cvss3_base_score: None,
            exploit_framework_metasploit: None,
            plugin_type: None,
            vpr: None,
        }
    }
}


