/*
 * Vulnerability Management
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AssetsListImportJobs200ResponseInner {
    /// The UUID of the asset import job.
    #[serde(rename = "job_id", skip_serializing_if = "Option::is_none")]
    pub job_id: Option<String>,
    /// The UUID of your Tenable.io container.
    #[serde(rename = "container_id", skip_serializing_if = "Option::is_none")]
    pub container_id: Option<String>,
    /// A user-defined name for the source of the import containing the asset records. You can specify only one source for each import.
    #[serde(rename = "source", skip_serializing_if = "Option::is_none")]
    pub source: Option<String>,
    /// The number of batches in the asset import job.
    #[serde(rename = "batches", skip_serializing_if = "Option::is_none")]
    pub batches: Option<i32>,
    /// The number of assets from the import job that Tenable.io successfully imported.
    #[serde(rename = "uploaded_assets", skip_serializing_if = "Option::is_none")]
    pub uploaded_assets: Option<i32>,
    /// The number of assets from the import job that Tenable.io failed to import.
    #[serde(rename = "failed_assets", skip_serializing_if = "Option::is_none")]
    pub failed_assets: Option<i32>,
    /// The Unix timestamp when Tenable.io started processing the import job.
    #[serde(rename = "start_time", skip_serializing_if = "Option::is_none")]
    pub start_time: Option<i32>,
    /// The Unix timestamp when Tenable.io performed an action on the import job.
    #[serde(rename = "last_update_time", skip_serializing_if = "Option::is_none")]
    pub last_update_time: Option<i32>,
    /// The Unix timestamp when Tenable.io completed processing the import job.
    #[serde(rename = "end_time", skip_serializing_if = "Option::is_none")]
    pub end_time: Option<i32>,
    /// The status of the import job. Possible values include: COMPLETE, IN_PROGRESS, or ERROR.
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<String>,
    /// The description of why a job failed.
    #[serde(rename = "status_message", skip_serializing_if = "Option::is_none")]
    pub status_message: Option<String>,
}

impl AssetsListImportJobs200ResponseInner {
    pub fn new() -> AssetsListImportJobs200ResponseInner {
        AssetsListImportJobs200ResponseInner {
            job_id: None,
            container_id: None,
            source: None,
            batches: None,
            uploaded_assets: None,
            failed_assets: None,
            start_time: None,
            last_update_time: None,
            end_time: None,
            status: None,
            status_message: None,
        }
    }
}


