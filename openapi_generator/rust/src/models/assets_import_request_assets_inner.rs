/*
 * Vulnerability Management
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AssetsImportRequestAssetsInner {
    /// A list of MAC addresses for the asset.
    #[serde(rename = "mac_address", skip_serializing_if = "Option::is_none")]
    pub mac_address: Option<Vec<String>>,
    /// The NetBIOS name for the asset.
    #[serde(rename = "netbios_name", skip_serializing_if = "Option::is_none")]
    pub netbios_name: Option<String>,
    /// A list of FQDNs for the asset.
    #[serde(rename = "fqdn", skip_serializing_if = "Option::is_none")]
    pub fqdn: Option<Vec<String>>,
    /// A list of IPv4 addresses for the asset. Tenable.io supports this legacy field for backwards compatibility, but for new requests, this field should be replaced by the ipv4 field.
    #[serde(rename = "ip_address", skip_serializing_if = "Option::is_none")]
    pub ip_address: Option<Vec<String>>,
    /// A list of IPv4 addresses for the asset.
    #[serde(rename = "ipv4", skip_serializing_if = "Option::is_none")]
    pub ipv4: Option<Vec<String>>,
    /// A list of IPv6 addresses for the asset.
    #[serde(rename = "ipv6", skip_serializing_if = "Option::is_none")]
    pub ipv6: Option<Vec<String>>,
    /// A list of hostnames for the asset.
    #[serde(rename = "hostname", skip_serializing_if = "Option::is_none")]
    pub hostname: Option<Vec<String>>,
    /// The operating systems that scans have associated with the asset record.
    #[serde(rename = "operating_system", skip_serializing_if = "Option::is_none")]
    pub operating_system: Option<Vec<String>>,
    /// The SSH key fingerprints that scans have associated with the asset record.
    #[serde(rename = "ssh_fingerprint", skip_serializing_if = "Option::is_none")]
    pub ssh_fingerprint: Option<String>,
    /// The BIOS UUID of the asset.
    #[serde(rename = "bios_uuid", skip_serializing_if = "Option::is_none")]
    pub bios_uuid: Option<String>,
    /// The manufacturer's unique identifier of the Trusted Platform Module (TPM) associated with the asset.
    #[serde(rename = "manufacturer_tpm_id", skip_serializing_if = "Option::is_none")]
    pub manufacturer_tpm_id: Option<String>,
    /// The unique identifier of the asset in McAfee ePolicy Orchestrator (ePO). For more information, see the McAfee documentation.
    #[serde(rename = "mcafee_epo_guid", skip_serializing_if = "Option::is_none")]
    pub mcafee_epo_guid: Option<String>,
    /// The unique identifier of the McAfee ePO agent that identified the asset. For more information, see the McAfee documentation.
    #[serde(rename = "mcafee_epo_agent_guid", skip_serializing_if = "Option::is_none")]
    pub mcafee_epo_agent_guid: Option<String>,
    /// The hardware key for the asset in Symantec Endpoint Protection.
    #[serde(rename = "symantec_ep_hardware_key", skip_serializing_if = "Option::is_none")]
    pub symantec_ep_hardware_key: Option<String>,
    /// The Asset ID of the asset in Qualys. For more information, see the Qualys documentation.
    #[serde(rename = "qualys_asset_id", skip_serializing_if = "Option::is_none")]
    pub qualys_asset_id: Option<String>,
    /// The Host ID of the asset in Qualys. For more information, see the Qualys documentation.
    #[serde(rename = "qualys_host_id", skip_serializing_if = "Option::is_none")]
    pub qualys_host_id: Option<String>,
    /// The unique record identifier of the asset in ServiceNow. For more information, see the ServiceNow documentation.
    #[serde(rename = "servicenow_sys_id", skip_serializing_if = "Option::is_none")]
    pub servicenow_sys_id: Option<String>,
    /// The customized name of the project to which the virtual machine instance belongs in Google Cloud Platform (GCP). For more information see \"Creating and Managing Projects\" in the GCP documentation.
    #[serde(rename = "gcp_project_id", skip_serializing_if = "Option::is_none")]
    pub gcp_project_id: Option<String>,
    /// The zone where the virtual machine instance runs in GCP. For more information, see \"Regions and Zones\" in the GCP documentation.
    #[serde(rename = "gcp_zone", skip_serializing_if = "Option::is_none")]
    pub gcp_zone: Option<String>,
    /// The unique identifier of the virtual machine instance in GCP.
    #[serde(rename = "gcp_instance_id", skip_serializing_if = "Option::is_none")]
    pub gcp_instance_id: Option<String>,
    /// The unique identifier of the Microsoft Azure virtual machine instance. For more information, see \"Accessing and Using Azure VM Unique ID\" in the Microsoft Azure documentation.
    #[serde(rename = "azure_vm_id", skip_serializing_if = "Option::is_none")]
    pub azure_vm_id: Option<String>,
    /// The unique identifier of the resource in the Azure Resource Manager. For more information, see the Azure Resource Manager Documentation.  **Note:** Do not include AWS or GCP data in the payload when importing Azure asset data.
    #[serde(rename = "azure_resource_id", skip_serializing_if = "Option::is_none")]
    pub azure_resource_id: Option<String>,
    /// The availability zone where Amazon Web Services hosts the virtual machine instance, for example, `us-east-1a`. Availability zones are subdivisions of AWS regions. For more information, see \"Regions and Availability Zones\" in the AWS documentation.
    #[serde(rename = "aws_availability_zone", skip_serializing_if = "Option::is_none")]
    pub aws_availability_zone: Option<String>,
    /// The unique identifier of the Linux instance in Amazon EC2. For more information, see the Amazon Elastic Compute Cloud Documentation.
    #[serde(rename = "aws_ec2_instance_id", skip_serializing_if = "Option::is_none")]
    pub aws_ec2_instance_id: Option<String>,
    /// The unique identifier of the Linux AMI image in Amazon Elastic Compute Cloud (Amazon EC2). For more information, see the Amazon Elastic Compute Cloud Documentation.
    #[serde(rename = "aws_ec2_instance_ami_id", skip_serializing_if = "Option::is_none")]
    pub aws_ec2_instance_ami_id: Option<String>,
    /// The virtual machine instance's group in AWS.
    #[serde(rename = "aws_ec2_instance_group_name", skip_serializing_if = "Option::is_none")]
    pub aws_ec2_instance_group_name: Option<String>,
    /// The state of the virtual machine instance in AWS at the time of the scan. For more information on instance states, see the AWS documentation.
    #[serde(rename = "aws_ec2_instance_state_name", skip_serializing_if = "Option::is_none")]
    pub aws_ec2_instance_state_name: Option<String>,
    /// The type of instance in AWS EC2.
    #[serde(rename = "aws_ec2_instance_type", skip_serializing_if = "Option::is_none")]
    pub aws_ec2_instance_type: Option<String>,
    /// The name of the virtual machine instance in AWS EC2.
    #[serde(rename = "aws_ec2_name", skip_serializing_if = "Option::is_none")]
    pub aws_ec2_name: Option<String>,
    /// The product code associated with the AMI used to launch the virtual machine instance in AWS EC2.
    #[serde(rename = "aws_ec2_product_code", skip_serializing_if = "Option::is_none")]
    pub aws_ec2_product_code: Option<String>,
    /// The canonical user identifier for the AWS account associated with the asset. For more information, see \"AWS Account Identifiers\" in the AWS documentation.  **Note:** Do not include Azure or GCP data in the payload when importing AWS asset data.
    #[serde(rename = "aws_owner_id", skip_serializing_if = "Option::is_none")]
    pub aws_owner_id: Option<String>,
    /// The region where AWS hosts the virtual machine instance, for example, `us-east-1`. For more information, see \"Regions and Availability Zones\" in the AWS documentation.
    #[serde(rename = "aws_region", skip_serializing_if = "Option::is_none")]
    pub aws_region: Option<String>,
    /// The unique identifier of the AWS subnet where the virtual machine instance was running at the time of the scan.
    #[serde(rename = "aws_subnet_id", skip_serializing_if = "Option::is_none")]
    pub aws_subnet_id: Option<String>,
    /// The unique identifier of the public cloud that hosts the AWS virtual machine instance. For more information, see the Amazon Virtual Private Cloud User Guide.
    #[serde(rename = "aws_vpc_id", skip_serializing_if = "Option::is_none")]
    pub aws_vpc_id: Option<String>,
    /// A list of Common Platform Enumeration (CPE) values that represent software applications a scan identified as present on an asset. The strings in this array must be valid CPE 2.2 values. For more information, see the \"Component Syntax\" section of the [CPE Specification, Version 2.2](https://cpe.mitre.org/files/cpe-specification_2.2.pdf).  **Note:** If no scan detects an application within 30 days of the scan that originally detected the application, Tenable.io considers the detection of that application expired. As a result, the next time a scan evaluates the asset, Tenable.io removes the expired application from the installed_software attribute. This activity is logged as a `remove` type of `attribute_change` update in the asset activity log.
    #[serde(rename = "installed_software", skip_serializing_if = "Option::is_none")]
    pub installed_software: Option<Vec<String>>,
    /// The unique identifiers of the asset in HCL BigFix. For more information, see the HCL BigFix documentation.
    #[serde(rename = "bigfix_asset_id", skip_serializing_if = "Option::is_none")]
    pub bigfix_asset_id: Option<Vec<String>>,
}

impl AssetsImportRequestAssetsInner {
    pub fn new() -> AssetsImportRequestAssetsInner {
        AssetsImportRequestAssetsInner {
            mac_address: None,
            netbios_name: None,
            fqdn: None,
            ip_address: None,
            ipv4: None,
            ipv6: None,
            hostname: None,
            operating_system: None,
            ssh_fingerprint: None,
            bios_uuid: None,
            manufacturer_tpm_id: None,
            mcafee_epo_guid: None,
            mcafee_epo_agent_guid: None,
            symantec_ep_hardware_key: None,
            qualys_asset_id: None,
            qualys_host_id: None,
            servicenow_sys_id: None,
            gcp_project_id: None,
            gcp_zone: None,
            gcp_instance_id: None,
            azure_vm_id: None,
            azure_resource_id: None,
            aws_availability_zone: None,
            aws_ec2_instance_id: None,
            aws_ec2_instance_ami_id: None,
            aws_ec2_instance_group_name: None,
            aws_ec2_instance_state_name: None,
            aws_ec2_instance_type: None,
            aws_ec2_name: None,
            aws_ec2_product_code: None,
            aws_owner_id: None,
            aws_region: None,
            aws_subnet_id: None,
            aws_vpc_id: None,
            installed_software: None,
            bigfix_asset_id: None,
        }
    }
}


