/*
 * Vulnerability Management
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

/// AssetsBulkDeleteRequestQuery : The query for selecting the assets to delete. Must include one or more filters. A filter must include an asset attribute, an operator, and a value. To get the list of supported filters, use the [GET /filters/workbenches/assets](ref:io-filters-assets-list) endpoint. Sets of multiple filters must be specified inside `and` or `or` arrays.  **Note:** You can also nest conditions, for example, specify a set of `or` sub-conditions for a condition inside the `and` array. Tenable.io supports up to 1,000 conditions (filters) within the query object.



#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AssetsBulkDeleteRequestQuery {
    /// The name of the asset attribute to match. Asset attributes can include tags, for example, `tag.city`.
    #[serde(rename = "field", skip_serializing_if = "Option::is_none")]
    pub field: Option<String>,
    /// The operator to apply to the matched value, for example, `eq` (equals), `neq` (does not equal), or `match` (contains).
    #[serde(rename = "operator", skip_serializing_if = "Option::is_none")]
    pub operator: Option<String>,
    /// The asset attribute value to match.   **Note:** The value is case sensitive when used with the `match` (contains) or `nmatch` (does not contain) operators.
    #[serde(rename = "value", skip_serializing_if = "Option::is_none")]
    pub value: Option<String>,
    /// To select assets that match all of multiple conditions, specify the conditions inside the `and` array.
    #[serde(rename = "and", skip_serializing_if = "Option::is_none")]
    pub and: Option<Vec<crate::models::AssetsBulkDeleteRequestQueryAndInner>>,
    /// To select assets that match any of multiple conditions, specify the conditions inside the `or` array.
    #[serde(rename = "or", skip_serializing_if = "Option::is_none")]
    pub or: Option<Vec<crate::models::AssetsBulkDeleteRequestQueryAndInner>>,
}

impl AssetsBulkDeleteRequestQuery {
    /// The query for selecting the assets to delete. Must include one or more filters. A filter must include an asset attribute, an operator, and a value. To get the list of supported filters, use the [GET /filters/workbenches/assets](ref:io-filters-assets-list) endpoint. Sets of multiple filters must be specified inside `and` or `or` arrays.  **Note:** You can also nest conditions, for example, specify a set of `or` sub-conditions for a condition inside the `and` array. Tenable.io supports up to 1,000 conditions (filters) within the query object.
    pub fn new() -> AssetsBulkDeleteRequestQuery {
        AssetsBulkDeleteRequestQuery {
            field: None,
            operator: None,
            value: None,
            and: None,
            or: None,
        }
    }
}


