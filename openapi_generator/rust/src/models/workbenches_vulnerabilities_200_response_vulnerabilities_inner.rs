/*
 * Vulnerability Management
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct WorkbenchesVulnerabilities200ResponseVulnerabilitiesInner {
    /// The number of times that a scan detected the vulnerability on an asset.
    #[serde(rename = "count", skip_serializing_if = "Option::is_none")]
    pub count: Option<i32>,
    /// The plugin's family.
    #[serde(rename = "plugin_family", skip_serializing_if = "Option::is_none")]
    pub plugin_family: Option<String>,
    /// The unique plugin ID.
    #[serde(rename = "plugin_id", skip_serializing_if = "Option::is_none")]
    pub plugin_id: Option<i32>,
    /// The name of the plugin that detected the vulnerability.
    #[serde(rename = "plugin_name", skip_serializing_if = "Option::is_none")]
    pub plugin_name: Option<String>,
    /// The current state of the reported plugin. Possible states include:  - Active—The vulnerability is currently present on an asset.  - New—The vulnerability is active on an asset, and was first detected within the last 14 days.  - Fixed—A subsequent scan detected that the formerly-active vulnerability is no longer present on an asset.  - Resurfaced—The vulnerability was previously marked as fixed on an asset, but a subsequent scan detected the vulnerability on the asset again.
    #[serde(rename = "vulnerability_state", skip_serializing_if = "Option::is_none")]
    pub vulnerability_state: Option<String>,
    /// The Vulnerability Priority Rating (VPR) for the vulnerability. If a plugin is designed to detect multiple vulnerabilities, the VPR represents the highest value calculated for a vulnerability associated with the plugin. For more information, see <a href=\"https://docs.tenable.com/vulnerability-management/Content/Analysis/RiskMetrics.htm\" target=\"_blank\">Severity vs. VPR</a> in the <i>Tenable Vulnerability Management User Guide</i>.
    #[serde(rename = "vpr_score", skip_serializing_if = "Option::is_none")]
    pub vpr_score: Option<f32>,
    /// The number of times that a user in the user interface created an accept rule for this vulnerability. For more information, see <a href=\"https://docs.tenable.com/vulnerability-management/Content/Platform/Settings/Recast/AboutRecastRules.htm\" target=\"_blank\">Recast Rules</a> in the <i>Tenable Vulnerability Management User Guide</i>.
    #[serde(rename = "accepted_count", skip_serializing_if = "Option::is_none")]
    pub accepted_count: Option<i32>,
    /// The number of times that a user in the user interface created a recast rule for this vulnerability. For more information, see <a href=\"https://docs.tenable.com/vulnerability-management/Content/Platform/Settings/Recast/AboutRecastRules.htm\" target=\"_blank\">Recast Rules</a> in the <i>Tenable Vulnerability Management User Guide</i>.
    #[serde(rename = "recasted_count", skip_serializing_if = "Option::is_none")]
    pub recasted_count: Option<i32>,
    /// The number of times that a scan detected the vulnerability on an asset, grouped by severity level.
    #[serde(rename = "counts by severity", skip_serializing_if = "Option::is_none")]
    pub counts_by_severity: Option<Vec<crate::models::WorkbenchesVulnerabilities200ResponseVulnerabilitiesInnerCountsBySeverityInner>>,
    /// The severity level of the vulnerability, as defined using the Common Vulnerability Scoring System (CVSS) base score. Possible values include:   - 0—The vulnerability has a CVSS score of 0, which corresponds to the \"info\" severity level.  - 1—The vulnerability has a CVSS score between 0.1 and 3.9, which corresponds to the \"low\" severity level.  - 2—The vulnerability has a CVSS score between 4.0 and 6.9, which corresponds to the \"medium\" severity level.  - 3—The vulnerability has a CVSS score between 7.0 and 9.9, which corresponds to the \"high\" severity level.  - 4—The vulnerability has a CVSS score of 10.0, which corresponds to the \"critical\" severity level.
    #[serde(rename = "severity", skip_serializing_if = "Option::is_none")]
    pub severity: Option<i32>,
}

impl WorkbenchesVulnerabilities200ResponseVulnerabilitiesInner {
    pub fn new() -> WorkbenchesVulnerabilities200ResponseVulnerabilitiesInner {
        WorkbenchesVulnerabilities200ResponseVulnerabilitiesInner {
            count: None,
            plugin_family: None,
            plugin_id: None,
            plugin_name: None,
            vulnerability_state: None,
            vpr_score: None,
            accepted_count: None,
            recasted_count: None,
            counts_by_severity: None,
            severity: None,
        }
    }
}


