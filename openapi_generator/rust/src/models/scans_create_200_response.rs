/*
 * Vulnerability Management
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ScansCreate200Response {
    /// The type of tag.
    #[serde(rename = "tag_type", skip_serializing_if = "Option::is_none")]
    pub tag_type: Option<String>,
    /// The unique ID of your Tenable.io instance.
    #[serde(rename = "container_id", skip_serializing_if = "Option::is_none")]
    pub container_id: Option<String>,
    /// The unique ID of the scan owner.
    #[serde(rename = "owner_uuid", skip_serializing_if = "Option::is_none")]
    pub owner_uuid: Option<String>,
    /// The UUID of the schedule for the scan.
    #[serde(rename = "uuid", skip_serializing_if = "Option::is_none")]
    pub uuid: Option<String>,
    /// The user-defined scan name.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// A brief user-defined description of the scan.
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// The unique ID of the policy associated with the scan.
    #[serde(rename = "policy_id", skip_serializing_if = "Option::is_none")]
    pub policy_id: Option<i32>,
    /// The UUID of the scanner that the scan is configured to use, if the scan is *not* configured for [scan routing](doc:manage-scan-routing-tio).
    #[serde(rename = "scanner_uuid", skip_serializing_if = "Option::is_none")]
    pub scanner_uuid: Option<String>,
    /// The UUID of the network object that Tenable.io associates with the scan results if the scan is configured for [scan routing](doc:manage-scan-routing-tio).
    #[serde(rename = "target_network_uuid", skip_serializing_if = "Option::is_none")]
    pub target_network_uuid: Option<String>,
    /// A comma-separated list of accounts that receive the email summary report.
    #[serde(rename = "emails", skip_serializing_if = "Option::is_none")]
    pub emails: Option<String>,
    /// A comma-separated list of mobile phone numbers that receive notification of the scan.
    #[serde(rename = "sms", skip_serializing_if = "Option::is_none")]
    pub sms: Option<String>,
    /// A value indicating whether the scan schedule is active (`true`) or inactive (`false`).
    #[serde(rename = "enabled", skip_serializing_if = "Option::is_none")]
    pub enabled: Option<bool>,
    /// The name of the dashboard file associated with the scan.
    #[serde(rename = "dashboard_file", skip_serializing_if = "Option::is_none")]
    pub dashboard_file: Option<String>,
    /// If `1`, your vulnerability remediation actions on scan targets have been successful.
    #[serde(rename = "remediation", skip_serializing_if = "Option::is_none")]
    pub remediation: Option<i32>,
    /// A value indicating whether the scan results appear in dashboards.
    #[serde(rename = "include_aggregate", skip_serializing_if = "Option::is_none")]
    pub include_aggregate: Option<bool>,
    /// Depends on the type of scan: <ul><li>For Nessus agent scans, `scan_time_window` is the time frame, in minutes, during which agents must transmit scan results to Tenable.io in order to be included in dashboards and reports. If your request omits this parameter, the default value is 180 minutes.</li><li>For Nessus scanner scans, `scan_time_window` is the time frame, in minutes, after which the scan will automatically stop. If your request omits this parameter, the default value is 0 and the scan will not stop after a certain time frame.</li></ul>
    #[serde(rename = "scan_time_window", skip_serializing_if = "Option::is_none")]
    pub scan_time_window: Option<String>,
    /// Targets specified in the `alt_targets` parameter of the [POST /scans/{scan_id}/launch](/reference#scans-launch) request body used to run the scan.
    #[serde(rename = "custom_targets", skip_serializing_if = "Option::is_none")]
    pub custom_targets: Option<String>,
    /// For one-time scans, the starting time and date for the scan. For recurrent scans, the first date on which the scan schedule is active and the time that recurring scans launch based on the `rrules` parameter.  This attribute has the following format: `YYYYMMDDTHHMMSS`.
    #[serde(rename = "starttime", skip_serializing_if = "Option::is_none")]
    pub starttime: Option<String>,
    /// The interval at which the scan repeats. The interval is formatted as a string of three values delimited by semi-colons. These values are: the frequency (FREQ=ONETIME or DAILY or WEEKLY or MONTHLY or YEARLY), the interval (INTERVAL=1 or 2 or 3 ... x), and the days of the week (BYDAY=SU,MO,TU,WE,TH,FR,SA). For a scan that runs every three weeks on Monday Wednesday and Friday, the string would be `FREQ=WEEKLY;INTERVAL=3;BYDAY=MO,WE,FR`. If the scan is not scheduled to recur, this attribute is `null`. For more information, see [rrules Format](doc:example-assessment-scan-recurring#rrules-format).  **Note:** To set the `rrules` parameter for an agent scan, the request must also include the following body parameters:<ul><li>The `uuid` parameter must specify an agent scan template. For more information, see [Tenable-Provided Agent Templates](https://docs.tenable.com/vulnerability-management/Content/Scans/AgentTemplates.htm) and the [GET /editor/scan/templates](ref:editor-list-templates) endpoint.</li><li>The `agent_group_id` parameter must specify an agent group. For more information, see [Agent Groups](ref:agent-groups).</li></ul>For an example request body for an agent scan, see [Example Agent Scan: Recurring](doc:example-agent-scan-recurring).
    #[serde(rename = "rrules", skip_serializing_if = "Option::is_none")]
    pub rrules: Option<String>,
    /// The timezone of the scheduled start time for the scan.
    #[serde(rename = "timezone", skip_serializing_if = "Option::is_none")]
    pub timezone: Option<String>,
    /// A list of filters that Tenable.io applies to determine whether it sends a notification email on scan completion to the recipients specified in the `emails` attribute.
    #[serde(rename = "notification_filters", skip_serializing_if = "Option::is_none")]
    pub notification_filters: Option<Vec<crate::models::ScansCreate200ResponseNotificationFiltersInner>>,
    /// The list of asset tag identifiers the scan uses to determine which assets it evaluates. For more information about tag-based scans, see [Manage Tag-Based Scans](doc:manage-tag-based-scans-tio).
    #[serde(rename = "tag_targets", skip_serializing_if = "Option::is_none")]
    pub tag_targets: Option<Vec<String>>,
    /// If `1`, the scan is shared with users other than the scan owner. The level of sharing is specified in the `acls` attribute of the scan details.
    #[serde(rename = "shared", skip_serializing_if = "Option::is_none")]
    pub shared: Option<bool>,
    /// The sharing permissions for the scan.
    #[serde(rename = "user_permissions", skip_serializing_if = "Option::is_none")]
    pub user_permissions: Option<i32>,
    /// The default permissions for the scan.
    #[serde(rename = "default_permissions", skip_serializing_if = "Option::is_none")]
    pub default_permissions: Option<i32>,
    /// The owner of the scan.
    #[serde(rename = "owner", skip_serializing_if = "Option::is_none")]
    pub owner: Option<String>,
    /// The unique ID of the owner of the scan.
    #[serde(rename = "owner_id", skip_serializing_if = "Option::is_none")]
    pub owner_id: Option<i32>,
    /// For newly-created scans, the date on which the scan configuration was created. For scans that have been launched at least once, this attribute does not represent the date on which the scan configuration was last modified. Instead, it represents the date on which the scan was last launched, in Unix time format. Tenable.io updates this attribute each time the scan launches.
    #[serde(rename = "last_modification_date", skip_serializing_if = "Option::is_none")]
    pub last_modification_date: Option<i32>,
    /// For newly-created scans, the date on which the scan configuration was originally created. For scans that have been launched at least once, this attribute does not represent the date on which the scan configuration was originally created. Instead, it represents the date on which the scan was first launched, in Unix time format.
    #[serde(rename = "creation_date", skip_serializing_if = "Option::is_none")]
    pub creation_date: Option<i32>,
    /// The type of scan.
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<String>,
    /// The unique ID of the scan.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
}

impl ScansCreate200Response {
    pub fn new() -> ScansCreate200Response {
        ScansCreate200Response {
            tag_type: None,
            container_id: None,
            owner_uuid: None,
            uuid: None,
            name: None,
            description: None,
            policy_id: None,
            scanner_uuid: None,
            target_network_uuid: None,
            emails: None,
            sms: None,
            enabled: None,
            dashboard_file: None,
            remediation: None,
            include_aggregate: None,
            scan_time_window: None,
            custom_targets: None,
            starttime: None,
            rrules: None,
            timezone: None,
            notification_filters: None,
            tag_targets: None,
            shared: None,
            user_permissions: None,
            default_permissions: None,
            owner: None,
            owner_id: None,
            last_modification_date: None,
            creation_date: None,
            r#type: None,
            id: None,
        }
    }
}


