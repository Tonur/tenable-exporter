/*
 * Vulnerability Management
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ScansCopy200Response {
    /// The name of the scan.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// The status of the scan. For a list of possible values, see [Scan Status](doc:scan-status-tio).
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<String>,
    /// The unique ID of the scan.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    /// For newly-created scans, the date on which the scan configuration was created. For scans that have been launched at least once, this attribute does not represent the date on which the scan configuration was last modified. Instead, it represents the date on which the scan was last launched, in Unix time format. Tenable.io updates this attribute each time the scan launches.
    #[serde(rename = "last_modification_date", skip_serializing_if = "Option::is_none")]
    pub last_modification_date: Option<i32>,
    /// The UUID of the scan.
    #[serde(rename = "uuid", skip_serializing_if = "Option::is_none")]
    pub uuid: Option<String>,
    /// The type of scan (local, remote, or agent).
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<String>,
    /// The owner of the scan.
    #[serde(rename = "owner", skip_serializing_if = "Option::is_none")]
    pub owner: Option<String>,
    /// If `true`, the schedule for the scan is enabled.
    #[serde(rename = "enabled", skip_serializing_if = "Option::is_none")]
    pub enabled: Option<bool>,
    /// If `true`, the scan has been read.
    #[serde(rename = "read", skip_serializing_if = "Option::is_none")]
    pub read: Option<bool>,
    /// If `1`, the scan is shared with users other than the scan owner. The level of sharing is specified in the `acls` attribute of the scan details.
    #[serde(rename = "shared", skip_serializing_if = "Option::is_none")]
    pub shared: Option<bool>,
    /// The sharing permissions for the scan.
    #[serde(rename = "user_permissions", skip_serializing_if = "Option::is_none")]
    pub user_permissions: Option<i32>,
    /// The creation date for the scan in Unix time.
    #[serde(rename = "creation_date", skip_serializing_if = "Option::is_none")]
    pub creation_date: Option<i32>,
    /// If `true`, the scan has a schedule and can be launched.
    #[serde(rename = "control", skip_serializing_if = "Option::is_none")]
    pub control: Option<bool>,
    /// For one-time scans, the starting time and date for the scan. For recurrent scans, the first date on which the scan schedule is active and the time that recurring scans launch based on the `rrules` attribute.  This attribute has the following format: `YYYYMMDDTHHMMSS`.
    #[serde(rename = "starttime", skip_serializing_if = "Option::is_none")]
    pub starttime: Option<String>,
    /// The timezone of the scheduled start time for the scan.
    #[serde(rename = "timezone", skip_serializing_if = "Option::is_none")]
    pub timezone: Option<String>,
    /// The interval at which the scan repeats. The interval is formatted as a string of three values delimited by semi-colons. These values are: the frequency (FREQ=ONETIME or DAILY or WEEKLY or MONTHLY or YEARLY), the interval (INTERVAL=1 or 2 or 3 ... x), and the days of the week (BYDAY=SU,MO,TU,WE,TH,FR,SA). For a scan that runs every three weeks on Monday Wednesday and Friday, the string would be `FREQ=WEEKLY;INTERVAL=3;BYDAY=MO,WE,FR`. If the scan is not scheduled to recur, this attribute is `null`. For more information, see [rrules Format](doc:example-assessment-scan-recurring#rrules-format).  **Note:** To set the `rrules` parameter for an agent scan, the request must also include the following body parameters:<ul><li>The `uuid` parameter must specify an agent scan template. For more information, see [Tenable-Provided Agent Templates](https://docs.tenable.com/vulnerability-management/Content/Scans/AgentTemplates.htm) and the [GET /editor/scan/templates](ref:editor-list-templates) endpoint.</li><li>The `agent_group_id` parameter must specify an agent group. For more information, see [Agent Groups](ref:agent-groups).</li></ul>For an example request body for an agent scan, see [Example Agent Scan: Recurring](doc:example-agent-scan-recurring).
    #[serde(rename = "rrules", skip_serializing_if = "Option::is_none")]
    pub rrules: Option<String>,
    /// The UUID for a specific instance in the scan schedule.
    #[serde(rename = "schedule_uuid", skip_serializing_if = "Option::is_none")]
    pub schedule_uuid: Option<String>,
}

impl ScansCopy200Response {
    pub fn new() -> ScansCopy200Response {
        ScansCopy200Response {
            name: None,
            status: None,
            id: None,
            last_modification_date: None,
            uuid: None,
            r#type: None,
            owner: None,
            enabled: None,
            read: None,
            shared: None,
            user_permissions: None,
            creation_date: None,
            control: None,
            starttime: None,
            timezone: None,
            rrules: None,
            schedule_uuid: None,
        }
    }
}


