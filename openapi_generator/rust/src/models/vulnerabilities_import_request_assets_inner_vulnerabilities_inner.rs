/*
 * Vulnerability Management
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct VulnerabilitiesImportRequestAssetsInnerVulnerabilitiesInner {
    /// The ID of the Nessus plugin that identified the vulnerability. This parameter is required if the vulnerability object does not specify a cve value.
    #[serde(rename = "tenable_plugin_id", skip_serializing_if = "Option::is_none")]
    pub tenable_plugin_id: Option<String>,
    /// The Common Vulnerability and Exposure (CVE) ID for the vulnerability. This parameter is required if the vulnerability object does not specify a `tenable_plugin_id` value.
    #[serde(rename = "cve", skip_serializing_if = "Option::is_none")]
    pub cve: Option<String>,
    /// The port the scanner used to communicate with the asset.
    #[serde(rename = "port", skip_serializing_if = "Option::is_none")]
    pub port: Option<i32>,
    /// The protocol the scanner used to communicate with the asset.
    #[serde(rename = "protocol", skip_serializing_if = "Option::is_none")]
    pub protocol: Option<String>,
    /// A value specifying whether the scan that identified the vulnerability was an authenticated (credentialed) scan.
    #[serde(rename = "authenticated", skip_serializing_if = "Option::is_none")]
    pub authenticated: Option<bool>,
    /// The date (in Unix time) when a scan first identified the vulnerability on the asset.
    #[serde(rename = "first_found", skip_serializing_if = "Option::is_none")]
    pub first_found: Option<i32>,
    /// The date (in Unix time) when a scan last identified the vulnerability on the asset.
    #[serde(rename = "last_found", skip_serializing_if = "Option::is_none")]
    pub last_found: Option<i32>,
    /// The date (in Unix time) when the vulnerability state was changed to `fixed`. Tenable.io updates the vulnerability state to fixed when a scan no longer detects a previously detected vulnerability on the asset.
    #[serde(rename = "last_fixed", skip_serializing_if = "Option::is_none")]
    pub last_fixed: Option<i32>,
    /// (Required) The text output of the scanner, up to 2,000 maximum characters.
    #[serde(rename = "output", skip_serializing_if = "Option::is_none")]
    pub output: Option<String>,
}

impl VulnerabilitiesImportRequestAssetsInnerVulnerabilitiesInner {
    pub fn new() -> VulnerabilitiesImportRequestAssetsInnerVulnerabilitiesInner {
        VulnerabilitiesImportRequestAssetsInnerVulnerabilitiesInner {
            tenable_plugin_id: None,
            cve: None,
            port: None,
            protocol: None,
            authenticated: None,
            first_found: None,
            last_found: None,
            last_fixed: None,
            output: None,
        }
    }
}


